"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@emotion+cache@11.11.0";
exports.ids = ["vendor-chunks/@emotion+cache@11.11.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@emotion+cache@11.11.0/node_modules/@emotion/cache/dist/emotion-cache.esm.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@emotion+cache@11.11.0/node_modules/@emotion/cache/dist/emotion-cache.esm.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ createCache)\n/* harmony export */ });\n/* harmony import */ var _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/sheet */ \"(ssr)/./node_modules/.pnpm/@emotion+sheet@1.2.2/node_modules/@emotion/sheet/dist/emotion-sheet.esm.js\");\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! stylis */ \"(ssr)/./node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Tokenizer.js\");\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! stylis */ \"(ssr)/./node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Utility.js\");\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! stylis */ \"(ssr)/./node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Enum.js\");\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! stylis */ \"(ssr)/./node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Serializer.js\");\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! stylis */ \"(ssr)/./node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Middleware.js\");\n/* harmony import */ var stylis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! stylis */ \"(ssr)/./node_modules/.pnpm/stylis@4.2.0/node_modules/stylis/src/Parser.js\");\n/* harmony import */ var _emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/weak-memoize */ \"(ssr)/./node_modules/.pnpm/@emotion+weak-memoize@0.3.1/node_modules/@emotion/weak-memoize/dist/emotion-weak-memoize.esm.js\");\n/* harmony import */ var _emotion_memoize__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @emotion/memoize */ \"(ssr)/./node_modules/.pnpm/@emotion+memoize@0.8.1/node_modules/@emotion/memoize/dist/emotion-memoize.esm.js\");\n\n\n\n\nvar identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {\n    var previous = 0;\n    var character = 0;\n    while(true){\n        previous = character;\n        character = (0,stylis__WEBPACK_IMPORTED_MODULE_3__.peek)(); // &\\f\n        if (previous === 38 && character === 12) {\n            points[index] = 1;\n        }\n        if ((0,stylis__WEBPACK_IMPORTED_MODULE_3__.token)(character)) {\n            break;\n        }\n        (0,stylis__WEBPACK_IMPORTED_MODULE_3__.next)();\n    }\n    return (0,stylis__WEBPACK_IMPORTED_MODULE_3__.slice)(begin, stylis__WEBPACK_IMPORTED_MODULE_3__.position);\n};\nvar toRules = function toRules(parsed, points) {\n    // pretend we've started with a comma\n    var index = -1;\n    var character = 44;\n    do {\n        switch((0,stylis__WEBPACK_IMPORTED_MODULE_3__.token)(character)){\n            case 0:\n                // &\\f\n                if (character === 38 && (0,stylis__WEBPACK_IMPORTED_MODULE_3__.peek)() === 12) {\n                    // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings\n                    // stylis inserts \\f after & to know when & where it should replace this sequence with the context selector\n                    // and when it should just concatenate the outer and inner selectors\n                    // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here\n                    points[index] = 1;\n                }\n                parsed[index] += identifierWithPointTracking(stylis__WEBPACK_IMPORTED_MODULE_3__.position - 1, points, index);\n                break;\n            case 2:\n                parsed[index] += (0,stylis__WEBPACK_IMPORTED_MODULE_3__.delimit)(character);\n                break;\n            case 4:\n                // comma\n                if (character === 44) {\n                    // colon\n                    parsed[++index] = (0,stylis__WEBPACK_IMPORTED_MODULE_3__.peek)() === 58 ? \"&\\f\" : \"\";\n                    points[index] = parsed[index].length;\n                    break;\n                }\n            // fallthrough\n            default:\n                parsed[index] += (0,stylis__WEBPACK_IMPORTED_MODULE_4__.from)(character);\n        }\n    }while (character = (0,stylis__WEBPACK_IMPORTED_MODULE_3__.next)());\n    return parsed;\n};\nvar getRules = function getRules(value, points) {\n    return (0,stylis__WEBPACK_IMPORTED_MODULE_3__.dealloc)(toRules((0,stylis__WEBPACK_IMPORTED_MODULE_3__.alloc)(value), points));\n}; // WeakSet would be more appropriate, but only WeakMap is supported in IE11\nvar fixedElements = /* #__PURE__ */ new WeakMap();\nvar compat = function compat(element) {\n    if (element.type !== \"rule\" || !element.parent || // positive .length indicates that this rule contains pseudo\n    // negative .length indicates that this rule has been already prefixed\n    element.length < 1) {\n        return;\n    }\n    var value = element.value, parent = element.parent;\n    var isImplicitRule = element.column === parent.column && element.line === parent.line;\n    while(parent.type !== \"rule\"){\n        parent = parent.parent;\n        if (!parent) return;\n    } // short-circuit for the simplest case\n    if (element.props.length === 1 && value.charCodeAt(0) !== 58 && !fixedElements.get(parent)) {\n        return;\n    } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)\n    // then the props has already been manipulated beforehand as they that array is shared between it and its \"rule parent\"\n    if (isImplicitRule) {\n        return;\n    }\n    fixedElements.set(element, true);\n    var points = [];\n    var rules = getRules(value, points);\n    var parentRules = parent.props;\n    for(var i = 0, k = 0; i < rules.length; i++){\n        for(var j = 0; j < parentRules.length; j++, k++){\n            element.props[k] = points[i] ? rules[i].replace(/&\\f/g, parentRules[j]) : parentRules[j] + \" \" + rules[i];\n        }\n    }\n};\nvar removeLabel = function removeLabel(element) {\n    if (element.type === \"decl\") {\n        var value = element.value;\n        if (value.charCodeAt(0) === 108 && // charcode for b\n        value.charCodeAt(2) === 98) {\n            // this ignores label\n            element[\"return\"] = \"\";\n            element.value = \"\";\n        }\n    }\n};\nvar ignoreFlag = \"emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason\";\nvar isIgnoringComment = function isIgnoringComment(element) {\n    return element.type === \"comm\" && element.children.indexOf(ignoreFlag) > -1;\n};\nvar createUnsafeSelectorsAlarm = function createUnsafeSelectorsAlarm(cache) {\n    return function(element, index, children) {\n        if (element.type !== \"rule\" || cache.compat) return;\n        var unsafePseudoClasses = element.value.match(/(:first|:nth|:nth-last)-child/g);\n        if (unsafePseudoClasses) {\n            var isNested = !!element.parent; // in nested rules comments become children of the \"auto-inserted\" rule and that's always the `element.parent`\n            //\n            // considering this input:\n            // .a {\n            //   .b /* comm */ {}\n            //   color: hotpink;\n            // }\n            // we get output corresponding to this:\n            // .a {\n            //   & {\n            //     /* comm */\n            //     color: hotpink;\n            //   }\n            //   .b {}\n            // }\n            var commentContainer = isNested ? element.parent.children : children;\n            for(var i = commentContainer.length - 1; i >= 0; i--){\n                var node = commentContainer[i];\n                if (node.line < element.line) {\n                    break;\n                } // it is quite weird but comments are *usually* put at `column: element.column - 1`\n                // so we seek *from the end* for the node that is earlier than the rule's `element` and check that\n                // this will also match inputs like this:\n                // .a {\n                //   /* comm */\n                //   .b {}\n                // }\n                //\n                // but that is fine\n                //\n                // it would be the easiest to change the placement of the comment to be the first child of the rule:\n                // .a {\n                //   .b { /* comm */ }\n                // }\n                // with such inputs we wouldn't have to search for the comment at all\n                // TODO: consider changing this comment placement in the next major version\n                if (node.column < element.column) {\n                    if (isIgnoringComment(node)) {\n                        return;\n                    }\n                    break;\n                }\n            }\n            unsafePseudoClasses.forEach(function(unsafePseudoClass) {\n                console.error('The pseudo class \"' + unsafePseudoClass + '\" is potentially unsafe when doing server-side rendering. Try changing it to \"' + unsafePseudoClass.split(\"-child\")[0] + '-of-type\".');\n            });\n        }\n    };\n};\nvar isImportRule = function isImportRule(element) {\n    return element.type.charCodeAt(1) === 105 && element.type.charCodeAt(0) === 64;\n};\nvar isPrependedWithRegularRules = function isPrependedWithRegularRules(index, children) {\n    for(var i = index - 1; i >= 0; i--){\n        if (!isImportRule(children[i])) {\n            return true;\n        }\n    }\n    return false;\n}; // use this to remove incorrect elements from further processing\n// so they don't get handed to the `sheet` (or anything else)\n// as that could potentially lead to additional logs which in turn could be overhelming to the user\nvar nullifyElement = function nullifyElement(element) {\n    element.type = \"\";\n    element.value = \"\";\n    element[\"return\"] = \"\";\n    element.children = \"\";\n    element.props = \"\";\n};\nvar incorrectImportAlarm = function incorrectImportAlarm(element, index, children) {\n    if (!isImportRule(element)) {\n        return;\n    }\n    if (element.parent) {\n        console.error(\"`@import` rules can't be nested inside other rules. Please move it to the top level and put it before regular rules. Keep in mind that they can only be used within global styles.\");\n        nullifyElement(element);\n    } else if (isPrependedWithRegularRules(index, children)) {\n        console.error(\"`@import` rules can't be after other rules. Please put your `@import` rules before your other rules.\");\n        nullifyElement(element);\n    }\n};\n/* eslint-disable no-fallthrough */ function prefix(value, length) {\n    switch((0,stylis__WEBPACK_IMPORTED_MODULE_4__.hash)(value, length)){\n        // color-adjust\n        case 5103:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"print-\" + value + value;\n        // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)\n        case 5737:\n        case 4201:\n        case 3177:\n        case 3433:\n        case 1641:\n        case 4457:\n        case 2921:\n        case 5572:\n        case 6356:\n        case 5844:\n        case 3191:\n        case 6645:\n        case 3005:\n        case 6391:\n        case 5879:\n        case 5623:\n        case 6135:\n        case 4599:\n        case 4855:\n        case 4215:\n        case 6389:\n        case 5109:\n        case 5365:\n        case 5621:\n        case 3829:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + value;\n        // appearance, user-select, transform, hyphens, text-size-adjust\n        case 5349:\n        case 4246:\n        case 4810:\n        case 6968:\n        case 2756:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MOZ + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + value + value;\n        // flex, flex-direction\n        case 6828:\n        case 4268:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + value + value;\n        // order\n        case 6165:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + \"flex-\" + value + value;\n        // align-items\n        case 5187:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /(\\w+).+(:[^]+)/, stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"box-$1$2\" + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + \"flex-$1$2\") + value;\n        // align-self\n        case 5443:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + \"flex-item-\" + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /flex-|-self/, \"\") + value;\n        // align-content\n        case 4675:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + \"flex-line-pack\" + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /align-content|flex-|-self/, \"\") + value;\n        // flex-shrink\n        case 5548:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, \"shrink\", \"negative\") + value;\n        // flex-basis\n        case 5292:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, \"basis\", \"preferred-size\") + value;\n        // flex-grow\n        case 6060:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"box-\" + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, \"-grow\", \"\") + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, \"grow\", \"positive\") + value;\n        // transition\n        case 4554:\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /([^-])(transform)/g, \"$1\" + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"$2\") + value;\n        // cursor\n        case 6187:\n            return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)((0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)((0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /(zoom-|grab)/, stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"$1\"), /(image-set)/, stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"$1\"), value, \"\") + value;\n        // background, background-image\n        case 5495:\n        case 3959:\n            return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /(image-set\\([^]*)/, stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"$1\" + \"$`$1\");\n        // justify-content\n        case 4968:\n            return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)((0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /(.+:)(flex-)?(.*)/, stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"box-pack:$3\" + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + \"flex-pack:$3\"), /s.+-b[^;]+/, \"justify\") + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + value;\n        // (margin|padding)-inline-(start|end)\n        case 4095:\n        case 3583:\n        case 4068:\n        case 2532:\n            return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /(.+)-inline(.+)/, stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"$1$2\") + value;\n        // (min|max)?(width|height|inline-size|block-size)\n        case 8116:\n        case 7059:\n        case 5753:\n        case 5535:\n        case 5445:\n        case 5701:\n        case 4933:\n        case 4677:\n        case 5533:\n        case 5789:\n        case 5021:\n        case 4765:\n            // stretch, max-content, min-content, fill-available\n            if ((0,stylis__WEBPACK_IMPORTED_MODULE_4__.strlen)(value) - 1 - length > 6) switch((0,stylis__WEBPACK_IMPORTED_MODULE_4__.charat)(value, length + 1)){\n                // (m)ax-content, (m)in-content\n                case 109:\n                    // -\n                    if ((0,stylis__WEBPACK_IMPORTED_MODULE_4__.charat)(value, length + 4) !== 45) break;\n                // (f)ill-available, (f)it-content\n                case 102:\n                    return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /(.+:)(.+)-([^]+)/, \"$1\" + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"$2-$3\" + \"$1\" + stylis__WEBPACK_IMPORTED_MODULE_5__.MOZ + ((0,stylis__WEBPACK_IMPORTED_MODULE_4__.charat)(value, length + 3) == 108 ? \"$3\" : \"$2-$3\")) + value;\n                // (s)tretch\n                case 115:\n                    return ~(0,stylis__WEBPACK_IMPORTED_MODULE_4__.indexof)(value, \"stretch\") ? prefix((0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, \"stretch\", \"fill-available\"), length) + value : value;\n            }\n            break;\n        // position: sticky\n        case 4949:\n            // (s)ticky?\n            if ((0,stylis__WEBPACK_IMPORTED_MODULE_4__.charat)(value, length + 1) !== 115) break;\n        // display: (flex|inline-flex)\n        case 6444:\n            switch((0,stylis__WEBPACK_IMPORTED_MODULE_4__.charat)(value, (0,stylis__WEBPACK_IMPORTED_MODULE_4__.strlen)(value) - 3 - (~(0,stylis__WEBPACK_IMPORTED_MODULE_4__.indexof)(value, \"!important\") && 10))){\n                // stic(k)y\n                case 107:\n                    return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, \":\", \":\" + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT) + value;\n                // (inline-)?fl(e)x\n                case 101:\n                    return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /(.+:)([^;!]+)(;|!.+)?/, \"$1\" + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + ((0,stylis__WEBPACK_IMPORTED_MODULE_4__.charat)(value, 14) === 45 ? \"inline-\" : \"\") + \"box$3\" + \"$1\" + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"$2$3\" + \"$1\" + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + \"$2box$3\") + value;\n            }\n            break;\n        // writing-mode\n        case 5936:\n            switch((0,stylis__WEBPACK_IMPORTED_MODULE_4__.charat)(value, length + 11)){\n                // vertical-l(r)\n                case 114:\n                    return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /[svh]\\w+-[tblr]{2}/, \"tb\") + value;\n                // vertical-r(l)\n                case 108:\n                    return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /[svh]\\w+-[tblr]{2}/, \"tb-rl\") + value;\n                // horizontal(-)tb\n                case 45:\n                    return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /[svh]\\w+-[tblr]{2}/, \"lr\") + value;\n            }\n            return stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + value + stylis__WEBPACK_IMPORTED_MODULE_5__.MS + value + value;\n    }\n    return value;\n}\nvar prefixer = function prefixer(element, index, children, callback) {\n    if (element.length > -1) {\n        if (!element[\"return\"]) switch(element.type){\n            case stylis__WEBPACK_IMPORTED_MODULE_5__.DECLARATION:\n                element[\"return\"] = prefix(element.value, element.length);\n                break;\n            case stylis__WEBPACK_IMPORTED_MODULE_5__.KEYFRAMES:\n                return (0,stylis__WEBPACK_IMPORTED_MODULE_6__.serialize)([\n                    (0,stylis__WEBPACK_IMPORTED_MODULE_3__.copy)(element, {\n                        value: (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(element.value, \"@\", \"@\" + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT)\n                    })\n                ], callback);\n            case stylis__WEBPACK_IMPORTED_MODULE_5__.RULESET:\n                if (element.length) return (0,stylis__WEBPACK_IMPORTED_MODULE_4__.combine)(element.props, function(value) {\n                    switch((0,stylis__WEBPACK_IMPORTED_MODULE_4__.match)(value, /(::plac\\w+|:read-\\w+)/)){\n                        // :read-(only|write)\n                        case \":read-only\":\n                        case \":read-write\":\n                            return (0,stylis__WEBPACK_IMPORTED_MODULE_6__.serialize)([\n                                (0,stylis__WEBPACK_IMPORTED_MODULE_3__.copy)(element, {\n                                    props: [\n                                        (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /:(read-\\w+)/, \":\" + stylis__WEBPACK_IMPORTED_MODULE_5__.MOZ + \"$1\")\n                                    ]\n                                })\n                            ], callback);\n                        // :placeholder\n                        case \"::placeholder\":\n                            return (0,stylis__WEBPACK_IMPORTED_MODULE_6__.serialize)([\n                                (0,stylis__WEBPACK_IMPORTED_MODULE_3__.copy)(element, {\n                                    props: [\n                                        (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /:(plac\\w+)/, \":\" + stylis__WEBPACK_IMPORTED_MODULE_5__.WEBKIT + \"input-$1\")\n                                    ]\n                                }),\n                                (0,stylis__WEBPACK_IMPORTED_MODULE_3__.copy)(element, {\n                                    props: [\n                                        (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /:(plac\\w+)/, \":\" + stylis__WEBPACK_IMPORTED_MODULE_5__.MOZ + \"$1\")\n                                    ]\n                                }),\n                                (0,stylis__WEBPACK_IMPORTED_MODULE_3__.copy)(element, {\n                                    props: [\n                                        (0,stylis__WEBPACK_IMPORTED_MODULE_4__.replace)(value, /:(plac\\w+)/, stylis__WEBPACK_IMPORTED_MODULE_5__.MS + \"input-$1\")\n                                    ]\n                                })\n                            ], callback);\n                    }\n                    return \"\";\n                });\n        }\n    }\n};\nvar isBrowser = typeof document !== \"undefined\";\nvar getServerStylisCache = isBrowser ? undefined : (0,_emotion_weak_memoize__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(function() {\n    return (0,_emotion_memoize__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(function() {\n        var cache = {};\n        return function(name) {\n            return cache[name];\n        };\n    });\n});\nvar defaultStylisPlugins = [\n    prefixer\n];\nvar createCache = function createCache(options) {\n    var key = options.key;\n    if ( true && !key) {\n        throw new Error(\"You have to configure `key` for your cache. Please make sure it's unique (and not equal to 'css') as it's used for linking styles to your cache.\\n\" + 'If multiple caches share the same key they might \"fight\" for each other\\'s style elements.');\n    }\n    if (isBrowser && key === \"css\") {\n        var ssrStyles = document.querySelectorAll(\"style[data-emotion]:not([data-s])\"); // get SSRed styles out of the way of React's hydration\n        // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)\n        // note this very very intentionally targets all style elements regardless of the key to ensure\n        // that creating a cache works inside of render of a React component\n        Array.prototype.forEach.call(ssrStyles, function(node) {\n            // we want to only move elements which have a space in the data-emotion attribute value\n            // because that indicates that it is an Emotion 11 server-side rendered style elements\n            // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector\n            // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)\n            // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles\n            // will not result in the Emotion 10 styles being destroyed\n            var dataEmotionAttribute = node.getAttribute(\"data-emotion\");\n            if (dataEmotionAttribute.indexOf(\" \") === -1) {\n                return;\n            }\n            document.head.appendChild(node);\n            node.setAttribute(\"data-s\", \"\");\n        });\n    }\n    var stylisPlugins = options.stylisPlugins || defaultStylisPlugins;\n    if (true) {\n        // $FlowFixMe\n        if (/[^a-z-]/.test(key)) {\n            throw new Error('Emotion key must only contain lower case alphabetical characters and - but \"' + key + '\" was passed');\n        }\n    }\n    var inserted = {};\n    var container;\n    var nodesToHydrate = [];\n    if (isBrowser) {\n        container = options.container || document.head;\n        Array.prototype.forEach.call(// means that the style elements we're looking at are only Emotion 11 server-rendered style elements\n        document.querySelectorAll('style[data-emotion^=\"' + key + ' \"]'), function(node) {\n            var attrib = node.getAttribute(\"data-emotion\").split(\" \"); // $FlowFixMe\n            for(var i = 1; i < attrib.length; i++){\n                inserted[attrib[i]] = true;\n            }\n            nodesToHydrate.push(node);\n        });\n    }\n    var _insert;\n    var omnipresentPlugins = [\n        compat,\n        removeLabel\n    ];\n    if (true) {\n        omnipresentPlugins.push(createUnsafeSelectorsAlarm({\n            get compat () {\n                return cache.compat;\n            }\n        }), incorrectImportAlarm);\n    }\n    if (isBrowser) {\n        var currentSheet;\n        var finalizingPlugins = [\n            stylis__WEBPACK_IMPORTED_MODULE_6__.stringify,\n             true ? function(element) {\n                if (!element.root) {\n                    if (element[\"return\"]) {\n                        currentSheet.insert(element[\"return\"]);\n                    } else if (element.value && element.type !== stylis__WEBPACK_IMPORTED_MODULE_5__.COMMENT) {\n                        // insert empty rule in non-production environments\n                        // so @emotion/jest can grab `key` from the (JS)DOM for caches without any rules inserted yet\n                        currentSheet.insert(element.value + \"{}\");\n                    }\n                }\n            } : 0\n        ];\n        var serializer = (0,stylis__WEBPACK_IMPORTED_MODULE_7__.middleware)(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins));\n        var stylis = function stylis(styles) {\n            return (0,stylis__WEBPACK_IMPORTED_MODULE_6__.serialize)((0,stylis__WEBPACK_IMPORTED_MODULE_8__.compile)(styles), serializer);\n        };\n        _insert = function insert(selector, serialized, sheet, shouldCache) {\n            currentSheet = sheet;\n            if ( true && serialized.map !== undefined) {\n                currentSheet = {\n                    insert: function insert(rule) {\n                        sheet.insert(rule + serialized.map);\n                    }\n                };\n            }\n            stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n            if (shouldCache) {\n                cache.inserted[serialized.name] = true;\n            }\n        };\n    } else {\n        var _finalizingPlugins = [\n            stylis__WEBPACK_IMPORTED_MODULE_6__.stringify\n        ];\n        var _serializer = (0,stylis__WEBPACK_IMPORTED_MODULE_7__.middleware)(omnipresentPlugins.concat(stylisPlugins, _finalizingPlugins));\n        var _stylis = function _stylis(styles) {\n            return (0,stylis__WEBPACK_IMPORTED_MODULE_6__.serialize)((0,stylis__WEBPACK_IMPORTED_MODULE_8__.compile)(styles), _serializer);\n        }; // $FlowFixMe\n        var serverStylisCache = getServerStylisCache(stylisPlugins)(key);\n        var getRules = function getRules(selector, serialized) {\n            var name = serialized.name;\n            if (serverStylisCache[name] === undefined) {\n                serverStylisCache[name] = _stylis(selector ? selector + \"{\" + serialized.styles + \"}\" : serialized.styles);\n            }\n            return serverStylisCache[name];\n        };\n        _insert = function _insert(selector, serialized, sheet, shouldCache) {\n            var name = serialized.name;\n            var rules = getRules(selector, serialized);\n            if (cache.compat === undefined) {\n                // in regular mode, we don't set the styles on the inserted cache\n                // since we don't need to and that would be wasting memory\n                // we return them so that they are rendered in a style tag\n                if (shouldCache) {\n                    cache.inserted[name] = true;\n                }\n                if (// because if people do ssr in tests, the source maps showing up would be annoying\n                 true && serialized.map !== undefined) {\n                    return rules + serialized.map;\n                }\n                return rules;\n            } else {\n                // in compat mode, we put the styles on the inserted cache so\n                // that emotion-server can pull out the styles\n                // except when we don't want to cache it which was in Global but now\n                // is nowhere but we don't want to do a major right now\n                // and just in case we're going to leave the case here\n                // it's also not affecting client side bundle size\n                // so it's really not a big deal\n                if (shouldCache) {\n                    cache.inserted[name] = rules;\n                } else {\n                    return rules;\n                }\n            }\n        };\n    }\n    var cache = {\n        key: key,\n        sheet: new _emotion_sheet__WEBPACK_IMPORTED_MODULE_0__.StyleSheet({\n            key: key,\n            container: container,\n            nonce: options.nonce,\n            speedy: options.speedy,\n            prepend: options.prepend,\n            insertionPoint: options.insertionPoint\n        }),\n        nonce: options.nonce,\n        inserted: inserted,\n        registered: {},\n        insert: _insert\n    };\n    cache.sheet.hydrate(nodesToHydrate);\n    return cache;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@emotion+cache@11.11.0/node_modules/@emotion/cache/dist/emotion-cache.esm.js\n");

/***/ })

};
;